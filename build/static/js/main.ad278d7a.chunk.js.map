{"version":3,"sources":["serviceWorker.ts","pages/CreateUser.tsx","pages/CreateIncident.tsx","pages/Login.tsx","components/circularprogress/CircularProgress.tsx","components/tabpanels/Dashboard.tsx","components/datatable/DataTable.tsx","components/datatable/DataTable-constants.ts","components/tabpanels/IncidentManagement.tsx","components/tabpanels/UserManagement.tsx","pages/Landing.tsx","components/appbar/AppBar.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","CreateUser","props","incidentTypes","value","label","priorities","deadlines","addDays","numberOfMonths","date","Date","setMonth","getMonth","addMonths","numberOfDays","setDate","getDate","Form","styled","form","ButtonContainer","div","TextField","MUITextfield","CreateIncident","React","useState","subject","setSubject","incidentType","setIncidentType","users","setUsers","user","setUser","priority","setPriority","deadline","setDeadline","description","setDescription","success","setSuccess","failure","setFailure","formIsValid","setFormIsValid","useEffect","axios","get","then","res","console","log","data","map","push","firstName","lastName","_id","catch","e","Container","maxWidth","style","marginTop","Card","CardHeader","title","subheader","CardContent","autoComplete","required","id","onChange","event","target","select","option","MenuItem","key","multiline","rows","variant","Button","color","onClick","history","back","requestBody","reportDate","type","reportedBy","isResolved","post","onSubmit","disabled","disableElevation","Snackbar","open","message","Login","MUICardContent","CircularProgress","MUICircularProgress","CircularCard","subtitle","Box","position","display","top","left","bottom","right","alignItems","justifyContent","Typography","component","unResolved","total","Dashboard","progress","setProgress","setUnResolved","setTotal","all","params","spread","incidentResponse","unResolvedResponse","length","treshold","timer","setInterval","prevProgress","clearInterval","Grid","container","spacing","item","xs","DataTable","setState","height","width","columns","loading","incidentColumns","field","hide","headerName","userColumns","valueGetter","getValue","IncidentManagement","incidents","setIncidents","to","startIcon","MUITabs","UserManagement","TabPanel","children","index","other","role","hidden","p","Tabs","Landing","setValue","newValue","Tab","Toolbar","MUIToolbar","AppBar","auth","ReactDOM","render","StrictMode","path","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.ad278d7a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\n\r\ninterface ICreateUser{\r\n\r\n}\r\n\r\nexport function CreateUser(props: ICreateUser){\r\n    return (\r\n        <h1>Create User</h1>\r\n    );\r\n}","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Container,\r\n  MenuItem,\r\n  TextField as MUITextfield,\r\n  Snackbar\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface ICreateIncident {}\r\n\r\nconst incidentTypes = [\r\n  {\r\n    value: \"Software\",\r\n    label: \"Software\"\r\n  },\r\n  {\r\n    value: \"Hardware\",\r\n    label: \"Hardware\"\r\n  },\r\n  {\r\n    value: \"Service\",\r\n    label: \"Service\"\r\n  }\r\n];\r\n\r\nconst users = [\r\n  {\r\n    value: \"5f8cc5cae2c69f3a1c7cf99c\",\r\n    label: \"Juan Albergen\"\r\n  }\r\n];\r\n\r\nconst priorities = [\r\n  {\r\n    value: \"Low\",\r\n    label: \"Low\"\r\n  },\r\n  {\r\n    value: \"Normal\",\r\n    label: \"Normal\"\r\n  },\r\n  {\r\n    value: \"High\",\r\n    label: \"High\"\r\n  }\r\n];\r\n\r\nconst deadlines = [\r\n  {\r\n    value: addDays(7),\r\n    label: \"7 Days\"\r\n  },\r\n  {\r\n    value: addDays(14),\r\n    label: \"14 days\"\r\n  },\r\n  {\r\n    value: addDays(28),\r\n    label: \"28 days\"\r\n  },\r\n  {\r\n    value: addMonths(6),\r\n    label: \"6 months\"\r\n  }\r\n];\r\n\r\nfunction addDays(numberOfDays: number) {\r\n  const date = new Date();\r\n  return date.setDate(date.getDate() + numberOfDays);\r\n}\r\n\r\nfunction addMonths(numberOfMonths: number) {\r\n  const date = new Date();\r\n  return date.setMonth(date.getMonth() + numberOfMonths);\r\n}\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-self: flex-end;\r\n  width: 47%;\r\n  margin-top: 28px;\r\n`;\r\n\r\nconst TextField = styled(MUITextfield)`\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nexport function CreateIncident(props: ICreateIncident) {\r\n  const [subject, setSubject] = React.useState(\"\");\r\n  const [incidentType, setIncidentType] = React.useState(\"Software\");\r\n  const [users, setUsers] = React.useState([{label: '', value: ''}])\r\n  const [user, setUser] = React.useState(\"Juan\");\r\n  const [priority, setPriority] = React.useState(\"Normal\");\r\n  const [deadline, setDeadline] = React.useState(\"7\");\r\n  const [description, setDescription] = React.useState(\"\");\r\n  const [success, setSuccess] = React.useState(false);\r\n  const [failure, setFailure] = React.useState(false);\r\n  const [formIsValid, setFormIsValid] = React.useState(false);\r\n\r\n  const handleChangeSubject = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSubject(event.target.value);\r\n  };\r\n\r\n  const handleChangeIncident = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setIncidentType(event.target.value);\r\n  };\r\n\r\n  const handleChangeUser = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUser(event.target.value);\r\n  };\r\n\r\n  const handleChangePriority = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setPriority(event.target.value);\r\n  };\r\n\r\n  const handleChangeDeadline = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setDeadline(event.target.value);\r\n  };\r\n\r\n  const handleChangeDescription = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    setDescription(event.target.value);\r\n  };\r\n\r\n  function onSubmit(event?: React.FormEvent<HTMLFormElement>) {\r\n    const requestBody = {\r\n      reportDate: new Date(),\r\n      subject: subject,\r\n      type: incidentType,\r\n      reportedBy: user,\r\n      priority: priority,\r\n      deadline: deadline,\r\n      description: description,\r\n      isResolved: \"false\"\r\n    };\r\n\r\n    axios\r\n      .post(`http://localhost:8080/api/incident`, requestBody)\r\n      .then(res => {\r\n        setSuccess(true);\r\n      })\r\n      .catch(e => {\r\n        setFailure(true);\r\n      });\r\n  }\r\n\r\n  function getUsers(): void{\r\n    axios\r\n        .get(`http://localhost:8080/api/user/all`)\r\n        .then(res => {\r\n          console.log(res.data)\r\n          const users: {label: string, value: string}[] = []\r\n          res.data.data.map((user: any) => {\r\n            users.push({\r\n              label: user.firstName + ' ' + user.lastName,\r\n              value: user._id\r\n            })\r\n          })\r\n          setUsers(users)\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n  }\r\n\r\n  React.useEffect(() => {\r\n      getUsers()\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n      setFormIsValid(validateForm());\r\n  }, [subject, incidentType, user, priority, deadline]);\r\n\r\n  function validateForm(): boolean {\r\n    console.log(\"subject\", subject)\r\n    return (subject &&\r\n      incidentType &&\r\n      user &&\r\n      priority &&\r\n      deadline) ? true : false;\r\n  }\r\n\r\n  console.log(\"render\")\r\n  return (\r\n    <Container maxWidth=\"sm\" style={{ marginTop: \"96px\" }}>\r\n      <Card>\r\n        <CardHeader\r\n          title=\"Create a new incident\"\r\n          subheader=\"Fill in all the required incident details\"\r\n        />\r\n        <CardContent>\r\n          <Form autoComplete=\"on\">\r\n            {/* SUBJECT */}\r\n            <TextField\r\n              required\r\n              id=\"subject\"\r\n              label=\"Subject\"\r\n              value={subject}\r\n              onChange={handleChangeSubject}\r\n            />\r\n\r\n            {/* TYPE OF INCIDENT*/}\r\n            <TextField\r\n              id=\"type\"\r\n              select\r\n              required\r\n              label=\"Type of incident\"\r\n              value={incidentType}\r\n              onChange={handleChangeIncident}\r\n            >\r\n              {incidentTypes.map(option => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n\r\n            {/* REPORTED BY USER*/}\r\n            <TextField\r\n              id=\"user\"\r\n              select\r\n              required\r\n              label=\"Reported by user\"\r\n              value={user}\r\n              onChange={handleChangeUser}\r\n            >\r\n              {users.map(option => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n\r\n            {/* PRIORITY*/}\r\n            <TextField\r\n              id=\"priority\"\r\n              select\r\n              required\r\n              label=\"Priority\"\r\n              value={priority}\r\n              onChange={handleChangePriority}\r\n            >\r\n              {priorities.map(option => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n\r\n            {/* DEADLINE*/}\r\n            <TextField\r\n              id=\"deadline\"\r\n              select\r\n              required\r\n              label=\"Deadline\"\r\n              value={deadline}\r\n              onChange={handleChangeDeadline}\r\n            >\r\n              {deadlines.map(option => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n\r\n            {/* DESCRIPTION*/}\r\n            <TextField\r\n              id=\"description\"\r\n              label=\"Description\"\r\n              multiline\r\n              rows={6}\r\n              value={description}\r\n              onChange={handleChangeDescription}\r\n              variant=\"outlined\"\r\n            />\r\n            <ButtonContainer>\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                onClick={() => window.history.back()}\r\n              >\r\n                CANCEL\r\n              </Button>\r\n\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                onClick={() => onSubmit()}\r\n                disabled={!formIsValid}\r\n                disableElevation\r\n              >\r\n                SUBMIT TICKET\r\n              </Button>\r\n            </ButtonContainer>\r\n          </Form>\r\n        </CardContent>\r\n        <Snackbar open={success} message=\"Incident creation successful\" />\r\n        <Snackbar\r\n          open={failure}\r\n          message=\"Incident creation failed, please try again\"\r\n        />\r\n      </Card>\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\ninterface ILogin{\r\n\r\n}\r\n\r\nexport function Login(props: ILogin){\r\n    return (\r\n        <h1>Login</h1>\r\n    );\r\n}","import React from \"react\";\r\nimport { CircularProgress as MUICircularProgress} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport styled from \"styled-components\";\r\nimport { Card, CardContent as MUICardContent, CardHeader } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\n\r\ninterface ICircularCard {\r\n  title: string;\r\n  subtitle: string;\r\n  unResolved?: number;\r\n  total: number;\r\n  value: number;\r\n}\r\n\r\nconst CardContent = styled(MUICardContent)`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst CircularProgress = styled(MUICircularProgress)`\r\n  width: 300px !important;\r\n  height: 300px !important;\r\n`;\r\n\r\nexport function CircularCard(props: ICircularCard) {;\r\n  return (\r\n    <Card>\r\n      <CardHeader\r\n        title={props.title}\r\n        subheader={props.subtitle}\r\n      />\r\n      <CardContent>\r\n        <Box position=\"relative\" display=\"inline-flex\">\r\n          <CircularProgress variant=\"static\" {...props} />\r\n          <Box\r\n            top={0}\r\n            left={0}\r\n            bottom={0}\r\n            right={0}\r\n            position=\"absolute\"\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n          >\r\n            <Typography variant=\"h2\" component=\"div\">\r\n              {props.unResolved && props.total\r\n                ? `${props.unResolved}/${props.total}`\r\n                : props.total}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","import React from \"react\";\r\nimport {\r\n  Container,\r\n  Grid\r\n} from \"@material-ui/core\";\r\nimport { CircularCard } from \"../circularprogress/CircularProgress\";\r\nimport axios from \"axios\";\r\n\r\nfunction getAllIncidents() {\r\n    return axios.get(\"http://localhost:8080/api/incident/all\");\r\n}\r\n\r\nfunction getAllUnsresolvedIncidents() {\r\n    return axios.get(\"http://localhost:8080/api/incident/all\", {\r\n        params: { isResolved: false }\r\n    });\r\n}\r\n\r\nfunction getIncidentsPastDeadline() {\r\n\r\n}\r\n\r\nexport default function Dashboard() {\r\n    const [progress, setProgress] = React.useState(0);\r\n    const [unResolved, setUnResolved] = React.useState(0);\r\n    const [total, setTotal] = React.useState(0);\r\n\r\n    React.useEffect(() => {\r\n        axios.all([getAllIncidents(), getAllUnsresolvedIncidents()]).then(\r\n            axios.spread(function(incidentResponse, unResolvedResponse) {\r\n                setTotal(incidentResponse.data.data.length);\r\n                setUnResolved(unResolvedResponse.data.data.length);\r\n            })\r\n        )\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        const treshold = (unResolved / total) * 100;\r\n        const timer = setInterval(() => {\r\n            setProgress(prevProgress =>\r\n                prevProgress >= treshold ? treshold : prevProgress + 10\r\n            );\r\n        }, 10);\r\n        return () => {\r\n            clearInterval(timer);\r\n        };\r\n    }, [total, unResolved])\r\n\r\n  return (\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={6}>\r\n            <CircularCard\r\n              title=\"Unresolved incidents\"\r\n              subtitle=\"All tickets currently open\"\r\n              total={total}\r\n              value={progress}\r\n              unResolved={unResolved}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <CircularCard\r\n              title=\"Incidents past deadline\"\r\n              subtitle=\"These tickets need your immediate attention\"\r\n              total={0}\r\n              value={0}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {DataGrid, ColDef, ValueGetterParams, CellParams} from \"@material-ui/data-grid\";\r\nimport axios from \"axios\";\r\nimport {incidentColumns} from \"./DataTable-constants\";\r\n\r\nexport interface IDataTable {\r\n  columns: ColDef[];\r\n  data: any[];\r\n  loading: boolean;\r\n}\r\n\r\nexport default function DataTable(props: IDataTable) {\r\n  const [state, setState] = useState({ data: [] });\r\n\r\n  React.useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:8080/api/incident/all`)\r\n      .then((res) => {\r\n        setState({ data: res.data.data });\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid rows={props.data} columns={props.columns} loading={props.loading} />\r\n    </div>\r\n  );\r\n}\r\n","import {ColDef, ValueGetterParams} from \"@material-ui/data-grid\";\r\n\r\nexport const incidentColumns: ColDef[] = [\r\n    { field: \"_id\", hide: true },\r\n    { field: \"subject\", headerName: \"Subject\", width: 500},\r\n    { field: \"type\", headerName: \"Incident Type\", width: 130},\r\n    { field: \"reportDate\", headerName: \"Report Date\", width: 180},\r\n    { field: \"deadline\", headerName: \"Due Date\"},\r\n    { field: \"priority\", headerName: \"Priority\"},\r\n    { field: \"isResolved\", headerName: \"Resolved\"}\r\n];\r\n\r\nexport const userColumns: ColDef[] = [\r\n    { field: \"_id\", hide: true },\r\n    { field: \"firstName\", hide: true },\r\n    { field: \"lastName\", hide: true },\r\n    { field: \"name\", headerName: \"Full Name\", width: 180, valueGetter: (params: ValueGetterParams) =>\r\n            `${params.getValue('firstName') || ''} ${params.getValue('lastName') || ''}`,},\r\n    { field: \"location\", headerName: \"Location\", width: 180},\r\n    { field: \"phoneNumber\", headerName: \"Phone Number\", width: 180},\r\n    { field: \"role\", headerName: \"Role\", width: 250},\r\n];\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Tabs as MUITabs,\r\n  Typography,\r\n  Button,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport DataTable from \"../datatable/DataTable\";\r\nimport { incidentColumns, userColumns } from \"../datatable/DataTable-constants\";\r\nimport axios from \"axios\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: any;\r\n  value: any;\r\n}\r\n\r\nexport default function IncidentManagement() {\r\n  const [incidents, setIncidents] = useState([]);\r\n\r\n  React.useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:8080/api/incident/all`)\r\n      .then(res => {\r\n        setIncidents(res.data.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Link to=\"/create-incident\">\r\n        <Button variant=\"contained\" color=\"secondary\" startIcon={<AddIcon />}>\r\n          Create Incident\r\n        </Button>\r\n      </Link>\r\n      <DataTable\r\n        columns={incidentColumns}\r\n        data={incidents}\r\n        loading={incidents.length <= 0}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Tabs as MUITabs,\r\n  Tab,\r\n  Typography,\r\n  Button,\r\n  Box,\r\n  Grid\r\n} from \"@material-ui/core\";\r\nimport DataTable from \"../datatable/DataTable\";\r\nimport styled from \"styled-components\";\r\nimport { incidentColumns, userColumns } from \"../datatable/DataTable-constants\";\r\nimport axios from \"axios\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CircularCard } from \"../circularprogress/CircularProgress\";\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: any;\r\n  value: any;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Tabs = styled(MUITabs)`\r\n  [class*=\"flexContainer\"] {\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nexport default function UserManagement() {\r\n  const [users, setUsers] = useState([]);\r\n\r\n  React.useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:8080/api/user/all`)\r\n      .then(res => {\r\n        setUsers(res.data.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Link to=\"/create-user\">\r\n        <Button variant=\"contained\" color=\"secondary\" startIcon={<AddIcon />}>\r\n          Create User\r\n        </Button>\r\n      </Link>\r\n      <DataTable\r\n        columns={userColumns}\r\n        data={users}\r\n        loading={users.length <= 0}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {Box, Tab, Tabs as MUITabs, Typography} from \"@material-ui/core\";\r\nimport Dashboard from \"../components/tabpanels/Dashboard\";\r\nimport IncidentManagement from \"../components/tabpanels/IncidentManagement\";\r\nimport UserManagement from \"../components/tabpanels/UserManagement\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface ILanding {}\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: any;\r\n  value: any;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Tabs = styled(MUITabs)`\r\n  [class*=\"flexContainer\"] {\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nexport function Landing(props: ILanding) {\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tabs value={value} onChange={handleChange}>\r\n        <Tab label=\"Dashboard\" />\r\n        <Tab label=\"Incident Management\" />\r\n        <Tab label=\"User Management\" />\r\n      </Tabs>\r\n\r\n      <TabPanel value={value} index={0}>\r\n        <Dashboard />\r\n      </TabPanel>\r\n\r\n      <TabPanel value={value} index={1}>\r\n        <IncidentManagement />\r\n      </TabPanel>\r\n\r\n      <TabPanel value={value} index={2}>\r\n        <UserManagement />\r\n      </TabPanel>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { AppBar as MUIAppBar, Toolbar as MUIToolbar } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Toolbar = styled(MUIToolbar)`\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport default function AppBar() {\r\n    const [auth, setAuth] = useState(null);\r\n\r\n    return (\r\n        <MUIAppBar position=\"static\">\r\n            <Toolbar>\r\n                <Typography variant=\"h6\">GG: Service Desk Platform</Typography>\r\n                {auth === null ? (\r\n                    <Button color=\"inherit\">Login</Button>\r\n                ) : (\r\n                    <Button color=\"inherit\">Logout</Button>\r\n                )}\r\n            </Toolbar>\r\n        </MUIAppBar>\r\n    );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport DataTable from \"./components/datatable/DataTable\";\nimport SimpleTabs from \"./components/appbar/AppBar\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { CreateUser } from \"./pages/CreateUser\";\nimport { CreateIncident } from \"./pages/CreateIncident\";\nimport { Login } from \"./pages/Login\";\nimport { Landing } from \"./pages/Landing\";\nimport AppBar from \"./components/appbar/AppBar\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppBar />\n    <Router>\n      <Switch>\n        <Route path=\"/create-user\">\n          <CreateUser />\n        </Route>\n        <Route path=\"/create-incident\">\n          <CreateIncident />\n        </Route>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n        <Route path=\"/\">\n          <Landing />\n        </Route>\n      </Switch>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}